---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nirmata
  namespace: {{ .Values.namespace }}
secrets:
- name: nirmata-sa-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: nirmata-sa-secret
  namespace: {{ .Values.namespace }}
  annotations:
    kubernetes.io/service-account.name: nirmata
type: kubernetes.io/service-account-token
---   
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nirmata:readonly
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nirmata:readonly
subjects:
- kind: ServiceAccount
  name: nirmata
  namespace: {{ .Values.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nirmata:controller
  namespace: {{ .Values.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: nirmata
  namespace: {{ .Values.namespace }}
---   
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nirmata:view
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: nirmata
  namespace: {{ .Values.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  name: nirmata:readonly
rules:
- apiGroups:
  - kyverno.io
  - operator.kyverno.io
  resources:
  - policies
  - policies/status
  - clusterpolicies
  - clusterpolicies/status
  - policyexceptions
  - cleanuppolicies
  - clustercleanuppolicies
  - generaterequests
  - generaterequests/status
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - wgpolicyk8s.io
  resources:
  - policyreports
  - policyreports/status
  - clusterpolicyreports
  - clusterpolicyreports/status
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - policy.kubernetes.io
  resources:
  - reportchangerequests
  - reportchangerequests/status
  - clusterreportchangerequests
  - clusterreportchangerequests/status
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - security.nirmata.io
  resources:
  - imagekeys
  - imagekeys/status
  - imagekeys/finalizers
  - kyvernoes
  - kyvernoes/status
  - policysets
  - policysets/status
  - kyvernooperators
  - kyvernooperators/status
  - kyvernoconfigs
  - kyvernoconfigs/status
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ''
  resources:
  - nodes
  - componentstatuses
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nirmata-kube-controller-config
  namespace: {{ .Values.namespace }}
data:
  WatchedResources: |-
    events.v1.
    policies.v1.kyverno.io
    clusterpolicies.v1.kyverno.io
    policyexceptions.v2alpha1.kyverno.io
    policysets.v1alpha1.security.nirmata.io
  IgnoreEvents: Normal.PolicyPlaceHolder.*
  FilterPatches: |-
    /metadata/resourceVersion
    /metadata/generation
    /results/*/timestamp/*
  IgnoreFields: metadata.managedFields
  FilterEvents: Warning.PolicyViolation.*,Normal.PolicySkipped.*,Normal.PolicyModified.*,Normal.PolicyDeleted.*,Normal.PolicyApplied.Resource\
    \ Generated.*,Normal.PolicyApplied.Resource Mutated.*,Normal.PolicyTamperDetected.*,Normal.PolicyTamperReverted.*
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nirmata-kube-controller
  namespace: nirmata
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nirmata-kube-controller
      nirmata.io/container.type: system
      app.kubernetes.io/name: nirmata
      app.kubernetes.io/instance: nirmata
  template:
    metadata:
      labels:
        app: nirmata-kube-controller
        nirmata.io/container.type: system
        app.kubernetes.io/name: nirmata
        app.kubernetes.io/instance: nirmata
    spec:
      containers:
      - args:
        - -url
        - $(URL)
        - -event-aggregation
        - -upstream-connect-fail-timeout
        - 10m
        - -cluster-name
        - {{ .Values.cluster.name }}
        {{- if .Values.apiToken }}
        - -api-token
        - {{ .Values.apiToken }}
        {{- end }}
        {{- if .Values.apiTokenSecret }}
        - -api-token-secret
        - {{ .Values.apiTokenSecret }}
        {{- end }}
        command:
        - /nirmata-kube-controller
        env:
        - name: URL
          value: {{ default "wss://nirmata.io/tunnels" .Values.nirmataURL }}
        {{- if and .Values.proxy.httpProxy .Values.proxy.httpsProxy .Values.proxy.noProxy }}
        - name: HTTP_PROXY
          value: {{ .Values.proxy.httpProxy }}
        - name: HTTPS_PROXY
          value: {{ .Values.proxy.httpsProxy }}
        - name: NO_PROXY
          value: {{ .Values.proxy.noProxy }}
        {{- end }}
        image: "{{ .Values.imageRegistry }}:{{ .Values.imageTag }}"
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /nirmata-kube-controller
        name: nirmata-kube-controller
        readinessProbe:
          exec:
            command:
            - /nirmata-kube-controller
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 200Mi
            cpu: 250m
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      hostNetwork: false
      imagePullSecrets:
      - name: nirmata-controller-registry-secret
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: nirmata
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-agent-config
  namespace: {{ .Values.namespace }}
data:
  config.yaml: |-
    receivers:
      prometheus:
        config:
          scrape_configs:
          - job_name: kyverno
            scrape_interval: 1m
            static_configs:
            - targets: [kyverno-svc-metrics.kyverno.svc.cluster.local:8000]
            metric_relabel_configs:
            - source_labels: [__name__]
              regex: (kyverno_admission_review_duration_seconds.*|kyverno_policy_execution_duration_seconds.*|kyverno_policy_results_total|kyverno_policy_rule_info_total|kyverno_admission_requests_total|kyverno_controller_reconcile_total|kyverno_controller_requeue_total|kyverno_controller_drop_total)
              action: keep
    exporters:
      prometheusremotewrite:
        endpoint: https://staging.nirmata.co/host-gateway/metrics-receiver
        external_labels:
          clusterId: 8b0919f4-2ed8-4c7d-94cc-f04ab849a2a7
        remote_write_queue:
          queue_size: 2000
          num_consumers: 1
        timeout: 300s
    service:
      pipelines:
        metrics:
          receivers: [prometheus]
          exporters: [prometheusremotewrite]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-agent
  namespace: {{ .Values.namespace }}
  labels:
    app: opentelemetry
    component: otel-agent
    app.kubernetes.io/instance: nirmata
    app.kubernetes.io/name: nirmata
spec:
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-agent
      app.kubernetes.io/instance: nirmata
      app.kubernetes.io/name: nirmata
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-agent
        app.kubernetes.io/instance: nirmata
        app.kubernetes.io/name: nirmata
    spec:
      containers:
      - name: otel-agent
        command:
        - /otelcol
        - --config=/etc/otel/config.yaml
        image: ghcr.io/nirmata/opentelemetry-collector:0.92.0
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        livenessProbe:
          httpGet:
            path: /metrics
            port: 8888
            scheme: HTTP
        readinessProbe:
          httpGet:
            path: /metrics
            port: 8888
            scheme: HTTP
        volumeMounts:
        - mountPath: /etc/otel/config.yaml
          name: data
          subPath: config.yaml
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        configMap:
          name: otel-agent-config
      imagePullSecrets:
      - name: nirmata-controller-registry-secret
